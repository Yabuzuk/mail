/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
} from "class-validator";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { ApplicationUpdateManyWithoutUsersInput } from "./ApplicationUpdateManyWithoutUsersInput";
import { Type } from "class-transformer";
import { TokenWalletUpdateManyWithoutUsersInput } from "./TokenWalletUpdateManyWithoutUsersInput";
import { RatingUpdateManyWithoutUsersInput } from "./RatingUpdateManyWithoutUsersInput";
import { FeedbackUpdateManyWithoutUsersInput } from "./FeedbackUpdateManyWithoutUsersInput";
import { AffiliateUpdateManyWithoutUsersInput } from "./AffiliateUpdateManyWithoutUsersInput";

@InputType()
class UserUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  username?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  roles?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  fullName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phoneNumber?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  socialMediaLinks?: string | null;

  @ApiProperty({
    required: false,
    type: () => ApplicationUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ApplicationUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ApplicationUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  applications?: ApplicationUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => TokenWalletUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => TokenWalletUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => TokenWalletUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  tokenWallets?: TokenWalletUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => RatingUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => RatingUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => RatingUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  ratings?: RatingUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => FeedbackUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => FeedbackUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => FeedbackUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  feedbacks?: FeedbackUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => AffiliateUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => AffiliateUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => AffiliateUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  affiliates?: AffiliateUpdateManyWithoutUsersInput;
}

export { UserUpdateInput as UserUpdateInput };
